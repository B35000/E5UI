"use strict";(self.webpackChunkold_e5=self.webpackChunkold_e5||[]).push([[340],{46340:(e,t,a)=>{a.r(t),a.d(t,{WaveParser:()=>f});var i=a(10216),n=a(11585),s=a(10255);const r={len:8,get:(e,t)=>({chunkID:new n.StringType(4,"latin1").get(e,t),chunkSize:n.UINT32_LE.get(e,t+4)})};class o{constructor(e){this.tagHeader=e,this.len=e.chunkSize,this.len+=1&this.len}get(e,t){return new n.StringType(this.tagHeader.chunkSize,"ascii").get(e,t)}}var h,c=a(95820);class k extends((0,c.fO)("Wave")){}!function(e){e[e.PCM=1]="PCM",e[e.ADPCM=2]="ADPCM",e[e.IEEE_FLOAT=3]="IEEE_FLOAT",e[e.MPEG_ADTS_AAC=5632]="MPEG_ADTS_AAC",e[e.MPEG_LOAS=5634]="MPEG_LOAS",e[e.RAW_AAC1=255]="RAW_AAC1",e[e.DOLBY_AC3_SPDIF=146]="DOLBY_AC3_SPDIF",e[e.DVM=8192]="DVM",e[e.RAW_SPORT=576]="RAW_SPORT",e[e.ESST_AC3=577]="ESST_AC3",e[e.DRM=9]="DRM",e[e.DTS2=8193]="DTS2",e[e.MPEG=80]="MPEG"}(h||(h={}));class d{constructor(e){if(e.chunkSize<16)throw new k("Invalid chunk size");this.len=e.chunkSize}get(e,t){return{wFormatTag:n.UINT16_LE.get(e,t),nChannels:n.UINT16_LE.get(e,t+2),nSamplesPerSec:n.UINT32_LE.get(e,t+4),nAvgBytesPerSec:n.UINT32_LE.get(e,t+8),nBlockAlign:n.UINT16_LE.get(e,t+12),wBitsPerSample:n.UINT16_LE.get(e,t+14)}}}class g{constructor(e){if(e.chunkSize<4)throw new k("Invalid fact chunk size.");this.len=e.chunkSize}get(e,t){return{dwSampleLength:n.UINT32_LE.get(e,t)}}}var m=a(9442),l=a(43465),u=a(18327),T=a(84764);const I={len:420,get:(e,t)=>({description:(0,l.F6)(new n.StringType(256,"ascii").get(e,t)).trim(),originator:(0,l.F6)(new n.StringType(32,"ascii").get(e,t+256)).trim(),originatorReference:(0,l.F6)(new n.StringType(32,"ascii").get(e,t+288)).trim(),originationDate:(0,l.F6)(new n.StringType(10,"ascii").get(e,t+320)).trim(),originationTime:(0,l.F6)(new n.StringType(8,"ascii").get(e,t+330)).trim(),timeReferenceLow:n.UINT32_LE.get(e,t+338),timeReferenceHigh:n.UINT32_LE.get(e,t+342),version:n.UINT16_LE.get(e,t+346),umid:new n.Uint8ArrayType(64).get(e,t+348),loudnessValue:n.UINT16_LE.get(e,t+412),maxTruePeakLevel:n.UINT16_LE.get(e,t+414),maxMomentaryLoudness:n.UINT16_LE.get(e,t+416),maxShortTermLoudness:n.UINT16_LE.get(e,t+418)})},S=s("music-metadata:parser:RIFF");class f extends T.s{constructor(){super(...arguments),this.blockAlign=0}async parse(){const e=await this.tokenizer.readToken(r);if(S(`pos=${this.tokenizer.position}, parse: chunkID=${e.chunkID}`),"RIFF"===e.chunkID)return this.parseRiffChunk(e.chunkSize).catch((e=>{if(!(e instanceof i.d1))throw e}))}async parseRiffChunk(e){const t=await this.tokenizer.readToken(u.e);if(this.metadata.setFormat("container",t),"WAVE"===t)return this.readWaveChunk(e-u.e.len);throw new k(`Unsupported RIFF format: RIFF/${t}`)}async readWaveChunk(e){for(;e>=r.len;){const t=await this.tokenizer.readToken(r);switch(e-=r.len+t.chunkSize,t.chunkSize>e&&this.metadata.addWarning("Data chunk size exceeds file size"),this.header=t,S(`pos=${this.tokenizer.position}, readChunk: chunkID=RIFF/WAVE/${t.chunkID}`),t.chunkID){case"LIST":await this.parseListTag(t);break;case"fact":this.metadata.setFormat("lossless",!1),this.fact=await this.tokenizer.readToken(new g(t));break;case"fmt ":{const e=await this.tokenizer.readToken(new d(t));let a=h[e.wFormatTag];a||(S(`WAVE/non-PCM format=${e.wFormatTag}`),a=`non-PCM (${e.wFormatTag})`),this.metadata.setFormat("codec",a),this.metadata.setFormat("bitsPerSample",e.wBitsPerSample),this.metadata.setFormat("sampleRate",e.nSamplesPerSec),this.metadata.setFormat("numberOfChannels",e.nChannels),this.metadata.setFormat("bitrate",e.nBlockAlign*e.nSamplesPerSec*8),this.blockAlign=e.nBlockAlign;break}case"id3 ":case"ID3 ":{const e=await this.tokenizer.readToken(new n.Uint8ArrayType(t.chunkSize)),a=i.vY(e);await(new m.S).parse(this.metadata,a,this.options);break}case"data":{!1!==this.metadata.format.lossless&&this.metadata.setFormat("lossless",!0);let e=t.chunkSize;if(this.tokenizer.fileInfo.size){const t=this.tokenizer.fileInfo.size-this.tokenizer.position;t<e&&(this.metadata.addWarning("data chunk length exceeding file length"),e=t)}const a=this.fact?this.fact.dwSampleLength:4294967295===e?void 0:e/this.blockAlign;a&&(this.metadata.setFormat("numberOfSamples",a),this.metadata.format.sampleRate&&this.metadata.setFormat("duration",a/this.metadata.format.sampleRate)),"ADPCM"===this.metadata.format.codec?this.metadata.setFormat("bitrate",352e3):this.metadata.format.sampleRate&&this.metadata.setFormat("bitrate",this.blockAlign*this.metadata.format.sampleRate*8),await this.tokenizer.ignore(t.chunkSize);break}case"bext":{const e=await this.tokenizer.readToken(I);Object.keys(e).forEach((t=>{this.metadata.addTag("exif",`bext.${t}`,e[t])}));const a=t.chunkSize-I.len;await this.tokenizer.ignore(a);break}case"\0\0\0\0":S(`Ignore padding chunk: RIFF/${t.chunkID} of ${t.chunkSize} bytes`),this.metadata.addWarning(`Ignore chunk: RIFF/${t.chunkID}`),await this.tokenizer.ignore(t.chunkSize);break;default:S(`Ignore chunk: RIFF/${t.chunkID} of ${t.chunkSize} bytes`),this.metadata.addWarning(`Ignore chunk: RIFF/${t.chunkID}`),await this.tokenizer.ignore(t.chunkSize)}this.header.chunkSize%2===1&&(S("Read odd padding byte"),await this.tokenizer.ignore(1))}}async parseListTag(e){const t=await this.tokenizer.readToken(new n.StringType(4,"latin1"));return S("pos=%s, parseListTag: chunkID=RIFF/WAVE/LIST/%s",this.tokenizer.position,t),"INFO"===t?this.parseRiffInfoTags(e.chunkSize-4):(this.metadata.addWarning(`Ignore chunk: RIFF/WAVE/LIST/${t}`),S(`Ignoring chunkID=RIFF/WAVE/LIST/${t}`),this.tokenizer.ignore(e.chunkSize-4).then())}async parseRiffInfoTags(e){for(;e>=8;){const t=await this.tokenizer.readToken(r),a=new o(t),i=await this.tokenizer.readToken(a);this.addTag(t.chunkID,l.F6(i)),e-=8+a.len}if(0!==e)throw new k(`Illegal remaining size: ${e}`)}addTag(e,t){this.metadata.addTag("exif",e,t)}}}}]);